version: 2

jobs:
  build:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup dependencies
          command: |
            set -euo pipefail

            apk add --no-progress --no-cache curl docker-cli tar xz jq git
            curl -LsS https://github.com/tcnksm/ghr/releases/download/v0.12.2/ghr_v0.12.2_linux_amd64.tar.gz \
                | tar xz --strip-components=1 -C /usr/bin --wildcards "*/ghr"
      - run:
          name: Build WireGuard if necessary
          command: |
            set -euo pipefail

            # Only build the latest 10 releases
            BUILD_IDS=$(curl -sS --fail "https://builds.coreos.fedoraproject.org/prod/streams/testing/builds/builds.json" | jq -r '.builds[].id' | head -n 10)
            WIREGUARD_VERSION=$(git ls-remote --tags https://git.zx2c4.com/WireGuard | cut -d"/" -f3 | grep -vF "^{}" | sort -V | tail -n 1)

            for BUILD_ID in ${BUILD_IDS}; do
              OUTPUT_NAME="wireguard-${WIREGUARD_VERSION}-${BUILD_ID}.tar.xz"

              RELEASE_HTTPCODE=$(curl -sSo /dev/null --write-out %{http_code} "https://github.com/SerialVelocity/coreos-wireguard/releases/download/all/${OUTPUT_NAME}")
              if [[ "${RELEASE_HTTPCODE}" -eq 302 ]]; then
                continue
              fi

              KERNEL_VERSION=$(curl -sS --fail "https://builds.coreos.fedoraproject.org/prod/streams/testing/builds/${BUILD_ID}/x86_64/commitmeta.json" \
                  | jq -r '.["rpmostree.rpmdb.pkglist"] | map(select(.[0] == "kernel"))[0] | .[2] + "-" + .[3] + "." + .[4]')

              docker build \
                  --build-arg "KERNEL_VERSION=${KERNEL_VERSION}" \
                  --build-arg "WIREGUARD_VERSION=${WIREGUARD_VERSION}" \
                  -t "coreos-wireguard:${KERNEL_VERSION}-${WIREGUARD_VERSION}" \
                  .
              docker save "coreos-wireguard:${KERNEL_VERSION}-${WIREGUARD_VERSION}" \
                  | tar xO --wildcards '*/layer.tar' \
                  | xz -c \
                  > "${OUTPUT_NAME}"
              ghr all "${OUTPUT_NAME}"
            done
