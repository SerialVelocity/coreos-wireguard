version: 2

jobs:
  build:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup dependencies
          command: |
            set -euo pipefail

            apk add --no-progress --no-cache curl docker-cli tar xz jq git
            curl -LsS https://github.com/tcnksm/ghr/releases/download/v0.12.2/ghr_v0.12.2_linux_amd64.tar.gz \
                | tar xz --strip-components=1 -C /usr/bin --wildcards "*/ghr"
      - run:
          name: Build WireGuard if necessary
          command: |
            set -euxo pipefail

            BRANCHES="stable testing"
            for BRANCH in ${BRANCHES}; do
              # Only build the latest 10 releases
              BUILD_IDS=$(curl -sS --fail "https://builds.coreos.fedoraproject.org/prod/streams/${BRANCH}/builds/builds.json" | jq -r '.builds[0:10][].id')
              WIREGUARD_VERSION=$(git ls-remote --tags https://git.zx2c4.com/wireguard-linux-compat | cut -d"/" -f3 | grep -vF "^{}" | grep -vE "^experimental-" | sed 's/^v//' | sort -V | tail -n 1)
              WIREGUARD_TOOLS_VERSION=$(git ls-remote --tags https://git.zx2c4.com/wireguard-tools | cut -d"/" -f3 | grep -vF "^{}" | grep -vE "^experimental-" | sed 's/^v//' | sort -V | tail -n 1)

              for BUILD_ID in ${BUILD_IDS}; do
                LONG_OUTPUT_NAME="wireguard-${WIREGUARD_VERSION}-${BUILD_ID}.tar.xz"
                SHORT_OUTPUT_NAME="wireguard-${BUILD_ID}.tar.xz"

                LONG_RELEASE_HTTPCODE=$(curl -sSo /dev/null --write-out %{http_code} "https://github.com/SerialVelocity/coreos-wireguard/releases/download/${BRANCH}/${LONG_OUTPUT_NAME}")
                SHORT_RELEASE_HTTPCODE=$(curl -sSo /dev/null --write-out %{http_code} "https://github.com/SerialVelocity/coreos-wireguard/releases/download/${BRANCH}/${SHORT_OUTPUT_NAME}")
                if [[ "${LONG_RELEASE_HTTPCODE}" -eq 302 ]] && [[ "${SHORT_RELEASE_HTTPCODE}" -eq 302 ]]; then
                  continue
                fi

                KERNEL_VERSION=$(curl -sS --fail "https://builds.coreos.fedoraproject.org/prod/streams/${BRANCH}/builds/${BUILD_ID}/x86_64/commitmeta.json" \
                    | jq -r '.["rpmostree.rpmdb.pkglist"] | map(select(.[0] == "kernel"))[0] | .[2] + "-" + .[3] + "." + .[4]')

                docker build \
                    --build-arg "KERNEL_VERSION=${KERNEL_VERSION}" \
                    --build-arg "WIREGUARD_VERSION=v${WIREGUARD_VERSION}" \
                    --build-arg "WIREGUARD_TOOLS_VERSION=v${WIREGUARD_TOOLS_VERSION}" \
                    -t "coreos-wireguard:${KERNEL_VERSION}-${WIREGUARD_VERSION}" \
                    .
                docker save "coreos-wireguard:${KERNEL_VERSION}-${WIREGUARD_VERSION}" \
                    | tar xO --wildcards '*/layer.tar' \
                    | xz -c \
                    > "${LONG_OUTPUT_NAME}"
                ln "${LONG_OUTPUT_NAME}" "${SHORT_OUTPUT_NAME}"
                if [[ "${LONG_RELEASE_HTTPCODE}" -ne 302 ]]; then
                  ghr "${BRANCH}" "${LONG_OUTPUT_NAME}"
                fi
                ghr -replace "${BRANCH}" "${SHORT_OUTPUT_NAME}"
              done
            done
workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
  nightly:
    jobs:
      - build
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                master
